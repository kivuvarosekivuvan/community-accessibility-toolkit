{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/components/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/C'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const checklistItems = [\"Use semantic HTML\", \"Provide alt text for images\", \"Ensure keyboard navigation\", \"Use sufficient color contrast\", \"Implement ARIA roles where necessary\"];\n  const handleCheck = item => {\n    const updatedItems = checkedItems.includes(item) ? checkedItems.filter(i => i !== item) : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n  const completionPercentage = Math.round(checkedItems.length / checklistItems.length * 100);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"checklist-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accessibility Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${completionPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"completion-text\",\n      children: [completionPercentage, \"% Completed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"checklist\",\n      children: checklistItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: checkedItems.includes(item) ? 'checked' : '',\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems.includes(item),\n            onChange: () => handleCheck(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"gCbgBAbmAEGd9DN9GZKSaFbYY4s=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Checklist","_s","checkedItems","setCheckedItems","saved","localStorage","getItem","JSON","parse","checklistItems","handleCheck","item","updatedItems","includes","filter","i","setItem","stringify","completionPercentage","Math","round","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/components/Checklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/C'; // Import the CSS file for styling\n\nconst Checklist = () => {\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const checklistItems = [\n    \"Use semantic HTML\",\n    \"Provide alt text for images\",\n    \"Ensure keyboard navigation\",\n    \"Use sufficient color contrast\",\n    \"Implement ARIA roles where necessary\",\n  ];\n\n  const handleCheck = (item) => {\n    const updatedItems = checkedItems.includes(item)\n      ? checkedItems.filter(i => i !== item)\n      : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n\n  const completionPercentage = Math.round((checkedItems.length / checklistItems.length) * 100);\n\n  return (\n    <section className=\"checklist-section\">\n      <h2>Accessibility Checklist</h2>\n      <div className=\"progress-bar\">\n        <div className=\"progress\" style={{ width: `${completionPercentage}%` }} />\n      </div>\n      <p className=\"completion-text\">{completionPercentage}% Completed</p>\n      <ul className=\"checklist\">\n        {checklistItems.map(item => (\n          <li key={item} className={checkedItems.includes(item) ? 'checked' : ''}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={checkedItems.includes(item)}\n                onChange={() => handleCheck(item)}\n              />\n              <span className=\"checkmark\"></span>\n              {item}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Checklist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}