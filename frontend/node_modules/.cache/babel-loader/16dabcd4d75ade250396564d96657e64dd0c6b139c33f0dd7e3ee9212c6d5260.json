{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/frontend/src/components/adminPage.js\",\n  _s = $RefreshSig$();\n// // frontend/src/components/AdminPage.js\n\n// import React, { useState, useEffect } from 'react';\n// import './styles/AdminPage.css';\n\n// const AdminPage = () => {\n//     const [feedbacks, setFeedbacks] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Fetch all feedbacks on component mount\n//     useEffect(() => {\n//         const fetchFeedbacks = async () => {\n//             try {\n//                 const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n//                 if (!res.ok) {\n//                     setError(`Server returned ${res.status}`);\n//                     setLoading(false);\n//                     return;\n//                 }\n//                 const data = await res.json();\n//                 setFeedbacks(data);\n//             } catch (err) {\n//                 console.error('Fetch error:', err);\n//                 setError('Could not fetch feedbacks.');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchFeedbacks();\n//     }, []);\n\n//     return (\n//         <section className=\"admin-section\">\n//             <h2 className=\"admin-header\">Admin Page: All Feedback Submissions</h2>\n\n//             {loading && <p>Loading feedbacks…</p>}\n//             {error && <div className=\"error-box\">{error}</div>}\n\n//             {!loading && !error && feedbacks.length === 0 && (\n//                 <p>No feedbacks have been submitted yet.</p>\n//             )}\n\n//             {!loading && !error && feedbacks.length > 0 && (\n//                 <div className=\"table-container\">\n//                     <table className=\"feedback-table\">\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>Timestamp (UTC)</th>\n//                                 <th>Feedback Text</th>\n//                                 <th>Category</th>\n//                                 <th>Rating</th>\n//                                 <th>Sentiment Label</th>\n//                                 <th>Sentiment Score</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {feedbacks.map((f) => (\n//                                 <tr key={f.id}>\n//                                     <td>{f.id}</td>\n//                                     <td>{new Date(f.timestamp).toLocaleString()}</td>\n//                                     <td className=\"feedback-text-cell\">{f.feedback}</td>\n//                                     <td>{f.category || '—'}</td>\n//                                     <td>\n//                                         {f.rating != null\n//                                             ? Array(f.rating).fill('★').join('') +\n//                                             Array(5 - f.rating).fill('☆').join('')\n//                                             : '—'}\n//                                     </td>\n//                                     <td className={`sentiment-label ${f.label.toLowerCase()}`}>\n//                                         {f.label}\n//                                     </td>\n//                                     <td>{f.score.toFixed(2)}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </section>\n//     );\n// };\n\n// export default AdminPage;\n\n// frontend/src/components/AdminPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './styles/AdminPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [feedbacks, setFeedbacks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [filterCategory, setFilterCategory] = useState('');\n  const [filterSentiment, setFilterSentiment] = useState('');\n  const [page, setPage] = useState(1);\n  const pageSize = 5;\n  useEffect(() => {\n    const fetchFeedbacks = async () => {\n      try {\n        const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n        if (!res.ok) {\n          setError(`Server returned ${res.status}`);\n          setLoading(false);\n          return;\n        }\n        const data = await res.json();\n        setFeedbacks(data);\n      } catch (err) {\n        setError('Could not fetch feedbacks.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFeedbacks();\n  }, []);\n  const filtered = feedbacks.filter(f => {\n    const matchesText = f.feedback.toLowerCase().includes(searchText.toLowerCase());\n    const matchesCategory = filterCategory ? f.category === filterCategory : true;\n    const matchesSentiment = filterSentiment ? f.label === filterSentiment : true;\n    return matchesText && matchesCategory && matchesSentiment;\n  });\n  const totalPages = Math.ceil(filtered.length / pageSize);\n  const displayed = filtered.slice((page - 1) * pageSize, page * pageSize);\n  const summary = feedbacks.reduce((acc, f) => {\n    acc.total += 1;\n    if (f.label === 'Positive') acc.positive += 1;\n    if (f.label === 'Neutral') acc.neutral += 1;\n    if (f.label === 'Negative') acc.negative += 1;\n    return acc;\n  }, {\n    total: 0,\n    positive: 0,\n    neutral: 0,\n    negative: 0\n  });\n  const chartData = [{\n    name: 'Positive',\n    count: summary.positive\n  }, {\n    name: 'Neutral',\n    count: summary.neutral\n  }, {\n    name: 'Negative',\n    count: summary.negative\n  }];\n  const categories = Array.from(new Set(feedbacks.map(f => f.category))).filter(c => c);\n  const sentiments = ['Positive', 'Neutral', 'Negative'];\n  const exportCSV = () => {\n    const headers = ['ID', 'Timestamp', 'Feedback', 'Category', 'Rating', 'Label', 'Score'];\n    const rows = filtered.map(f => [f.id, f.timestamp, `\"${f.feedback.replace(/\"/g, '\"\"')}\"`, f.category, f.rating, f.label, f.score.toFixed(2)]);\n    const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'feedbacks.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"admin-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-header\",\n      children: \"Admin Page: All Feedback Submissions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading feedbacks\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-box\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }, this), !loading && !error && feedbacks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedbacks have been submitted yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 62\n    }, this), !loading && !error && feedbacks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: summary.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: summary.positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: summary.neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: summary.negative\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 200,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"count\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search feedback...\",\n          value: searchText,\n          onChange: e => {\n            setSearchText(e.target.value);\n            setPage(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterCategory,\n          onChange: e => {\n            setFilterCategory(e.target.value);\n            setPage(1);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c,\n            children: c\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterSentiment,\n          onChange: e => {\n            setFilterSentiment(e.target.value);\n            setPage(1);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Sentiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), sentiments.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportCSV,\n          className: \"export-button\",\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"feedback-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Feedback Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sentiment Label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sentiment Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: displayed.map(f => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(f.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"feedback-text-cell\",\n                children: f.feedback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.category || '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.rating != null ? Array(f.rating).fill('★').join('') + Array(5 - f.rating).fill('☆').join('') : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `sentiment-label ${f.label.toLowerCase()}`,\n                children: f.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.score.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this)]\n            }, f.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(prev => Math.max(prev - 1, 1)),\n          disabled: page === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", page, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(prev => Math.min(prev + 1, totalPages)),\n          disabled: page === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"1H0q+kCPlhqDkagkesuIciAFC9Q=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","feedbacks","setFeedbacks","loading","setLoading","error","setError","searchText","setSearchText","filterCategory","setFilterCategory","filterSentiment","setFilterSentiment","page","setPage","pageSize","fetchFeedbacks","res","fetch","ok","status","data","json","err","filtered","filter","f","matchesText","feedback","toLowerCase","includes","matchesCategory","category","matchesSentiment","label","totalPages","Math","ceil","length","displayed","slice","summary","reduce","acc","total","positive","neutral","negative","chartData","name","count","categories","Array","from","Set","map","c","sentiments","exportCSV","headers","rows","id","timestamp","replace","rating","score","toFixed","csvContent","r","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","fill","placeholder","value","onChange","e","target","s","onClick","Date","toLocaleString","prev","max","disabled","min","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/frontend/src/components/adminPage.js"],"sourcesContent":["// // frontend/src/components/AdminPage.js\n\n// import React, { useState, useEffect } from 'react';\n// import './styles/AdminPage.css';\n\n// const AdminPage = () => {\n//     const [feedbacks, setFeedbacks] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Fetch all feedbacks on component mount\n//     useEffect(() => {\n//         const fetchFeedbacks = async () => {\n//             try {\n//                 const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n//                 if (!res.ok) {\n//                     setError(`Server returned ${res.status}`);\n//                     setLoading(false);\n//                     return;\n//                 }\n//                 const data = await res.json();\n//                 setFeedbacks(data);\n//             } catch (err) {\n//                 console.error('Fetch error:', err);\n//                 setError('Could not fetch feedbacks.');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchFeedbacks();\n//     }, []);\n\n//     return (\n//         <section className=\"admin-section\">\n//             <h2 className=\"admin-header\">Admin Page: All Feedback Submissions</h2>\n\n//             {loading && <p>Loading feedbacks…</p>}\n//             {error && <div className=\"error-box\">{error}</div>}\n\n//             {!loading && !error && feedbacks.length === 0 && (\n//                 <p>No feedbacks have been submitted yet.</p>\n//             )}\n\n//             {!loading && !error && feedbacks.length > 0 && (\n//                 <div className=\"table-container\">\n//                     <table className=\"feedback-table\">\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>Timestamp (UTC)</th>\n//                                 <th>Feedback Text</th>\n//                                 <th>Category</th>\n//                                 <th>Rating</th>\n//                                 <th>Sentiment Label</th>\n//                                 <th>Sentiment Score</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {feedbacks.map((f) => (\n//                                 <tr key={f.id}>\n//                                     <td>{f.id}</td>\n//                                     <td>{new Date(f.timestamp).toLocaleString()}</td>\n//                                     <td className=\"feedback-text-cell\">{f.feedback}</td>\n//                                     <td>{f.category || '—'}</td>\n//                                     <td>\n//                                         {f.rating != null\n//                                             ? Array(f.rating).fill('★').join('') +\n//                                             Array(5 - f.rating).fill('☆').join('')\n//                                             : '—'}\n//                                     </td>\n//                                     <td className={`sentiment-label ${f.label.toLowerCase()}`}>\n//                                         {f.label}\n//                                     </td>\n//                                     <td>{f.score.toFixed(2)}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </section>\n//     );\n// };\n\n// export default AdminPage;\n\n\n\n// frontend/src/components/AdminPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport './styles/AdminPage.css';\n\nconst AdminPage = () => {\n    const [feedbacks, setFeedbacks] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [filterCategory, setFilterCategory] = useState('');\n    const [filterSentiment, setFilterSentiment] = useState('');\n    const [page, setPage] = useState(1);\n    const pageSize = 5;\n\n    useEffect(() => {\n        const fetchFeedbacks = async () => {\n            try {\n                const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n                if (!res.ok) {\n                    setError(`Server returned ${res.status}`);\n                    setLoading(false);\n                    return;\n                }\n                const data = await res.json();\n                setFeedbacks(data);\n            } catch (err) {\n                setError('Could not fetch feedbacks.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchFeedbacks();\n    }, []);\n\n    const filtered = feedbacks.filter(f => {\n        const matchesText = f.feedback.toLowerCase().includes(searchText.toLowerCase());\n        const matchesCategory = filterCategory ? f.category === filterCategory : true;\n        const matchesSentiment = filterSentiment ? f.label === filterSentiment : true;\n        return matchesText && matchesCategory && matchesSentiment;\n    });\n\n    const totalPages = Math.ceil(filtered.length / pageSize);\n    const displayed = filtered.slice((page - 1) * pageSize, page * pageSize);\n\n    const summary = feedbacks.reduce(\n        (acc, f) => {\n            acc.total += 1;\n            if (f.label === 'Positive') acc.positive += 1;\n            if (f.label === 'Neutral') acc.neutral += 1;\n            if (f.label === 'Negative') acc.negative += 1;\n            return acc;\n        },\n        { total: 0, positive: 0, neutral: 0, negative: 0 }\n    );\n\n    const chartData = [\n        { name: 'Positive', count: summary.positive },\n        { name: 'Neutral', count: summary.neutral },\n        { name: 'Negative', count: summary.negative },\n    ];\n\n    const categories = Array.from(new Set(feedbacks.map(f => f.category))).filter(c => c);\n    const sentiments = ['Positive', 'Neutral', 'Negative'];\n\n    const exportCSV = () => {\n        const headers = ['ID', 'Timestamp', 'Feedback', 'Category', 'Rating', 'Label', 'Score'];\n        const rows = filtered.map(f => [\n            f.id,\n            f.timestamp,\n            `\"${f.feedback.replace(/\"/g, '\"\"')}\"`,\n            f.category,\n            f.rating,\n            f.label,\n            f.score.toFixed(2),\n        ]);\n        const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'feedbacks.csv';\n        a.click();\n        URL.revokeObjectURL(url);\n    };\n\n    return (\n        <section className=\"admin-section\">\n            <h2 className=\"admin-header\">Admin Page: All Feedback Submissions</h2>\n            {loading && <p>Loading feedbacks…</p>}\n            {error && <div className=\"error-box\">{error}</div>}\n            {!loading && !error && feedbacks.length === 0 && <p>No feedbacks have been submitted yet.</p>}\n            {!loading && !error && feedbacks.length > 0 && (\n                <>\n                    <div className=\"summary-cards\">\n                        <div className=\"card\">\n                            <h3>Total</h3>\n                            <p>{summary.total}</p>\n                        </div>\n                        <div className=\"card\">\n                            <h3>Positive</h3>\n                            <p>{summary.positive}</p>\n                        </div>\n                        <div className=\"card\">\n                            <h3>Neutral</h3>\n                            <p>{summary.neutral}</p>\n                        </div>\n                        <div className=\"card\">\n                            <h3>Negative</h3>\n                            <p>{summary.negative}</p>\n                        </div>\n                    </div>\n                    <div className=\"chart-container\">\n                        <ResponsiveContainer width=\"100%\" height={200}>\n                            <BarChart data={chartData}>\n                                <XAxis dataKey=\"name\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                    <div className=\"filters\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search feedback...\"\n                            value={searchText}\n                            onChange={e => { setSearchText(e.target.value); setPage(1); }}\n                        />\n                        <select\n                            value={filterCategory}\n                            onChange={e => { setFilterCategory(e.target.value); setPage(1); }}\n                        >\n                            <option value=\"\">All Categories</option>\n                            {categories.map(c => (\n                                <option key={c} value={c}>{c}</option>\n                            ))}\n                        </select>\n                        <select\n                            value={filterSentiment}\n                            onChange={e => { setFilterSentiment(e.target.value); setPage(1); }}\n                        >\n                            <option value=\"\">All Sentiments</option>\n                            {sentiments.map(s => (\n                                <option key={s} value={s}>{s}</option>\n                            ))}\n                        </select>\n                        <button onClick={exportCSV} className=\"export-button\">Export CSV</button>\n                    </div>\n                    <div className=\"table-container\">\n                        <table className=\"feedback-table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Timestamp</th>\n                                    <th>Feedback Text</th>\n                                    <th>Category</th>\n                                    <th>Rating</th>\n                                    <th>Sentiment Label</th>\n                                    <th>Sentiment Score</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {displayed.map(f => (\n                                    <tr key={f.id}>\n                                        <td>{f.id}</td>\n                                        <td>{new Date(f.timestamp).toLocaleString()}</td>\n                                        <td className=\"feedback-text-cell\">{f.feedback}</td>\n                                        <td>{f.category || '—'}</td>\n                                        <td>\n                                            {f.rating != null\n                                                ? Array(f.rating).fill('★').join('') + Array(5 - f.rating).fill('☆').join('')\n                                                : '—'}\n                                        </td>\n                                        <td className={`sentiment-label ${f.label.toLowerCase()}`}>\n                                            {f.label}\n                                        </td>\n                                        <td>{f.score.toFixed(2)}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"pagination\">\n                        <button\n                            onClick={() => setPage(prev => Math.max(prev - 1, 1))}\n                            disabled={page === 1}\n                        >\n                            Previous\n                        </button>\n                        <span>Page {page} of {totalPages}</span>\n                        <button\n                            onClick={() => setPage(prev => Math.min(prev + 1, totalPages))}\n                            disabled={page === totalPages}\n                        >\n                            Next\n                        </button>\n                    </div>\n                </>\n            )}\n        </section>\n    );\n};\n\nexport default AdminPage;\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AACpF,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM4B,QAAQ,GAAG,CAAC;EAElB3B,SAAS,CAAC,MAAM;IACZ,MAAM4B,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAC9D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACTb,QAAQ,CAAC,mBAAmBW,GAAG,CAACG,MAAM,EAAE,CAAC;UACzChB,UAAU,CAAC,KAAK,CAAC;UACjB;QACJ;QACA,MAAMiB,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BpB,YAAY,CAACmB,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVjB,QAAQ,CAAC,4BAA4B,CAAC;MAC1C,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDY,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,QAAQ,GAAGvB,SAAS,CAACwB,MAAM,CAACC,CAAC,IAAI;IACnC,MAAMC,WAAW,GAAGD,CAAC,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvB,UAAU,CAACsB,WAAW,CAAC,CAAC,CAAC;IAC/E,MAAME,eAAe,GAAGtB,cAAc,GAAGiB,CAAC,CAACM,QAAQ,KAAKvB,cAAc,GAAG,IAAI;IAC7E,MAAMwB,gBAAgB,GAAGtB,eAAe,GAAGe,CAAC,CAACQ,KAAK,KAAKvB,eAAe,GAAG,IAAI;IAC7E,OAAOgB,WAAW,IAAII,eAAe,IAAIE,gBAAgB;EAC7D,CAAC,CAAC;EAEF,MAAME,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACb,QAAQ,CAACc,MAAM,GAAGvB,QAAQ,CAAC;EACxD,MAAMwB,SAAS,GAAGf,QAAQ,CAACgB,KAAK,CAAC,CAAC3B,IAAI,GAAG,CAAC,IAAIE,QAAQ,EAAEF,IAAI,GAAGE,QAAQ,CAAC;EAExE,MAAM0B,OAAO,GAAGxC,SAAS,CAACyC,MAAM,CAC5B,CAACC,GAAG,EAAEjB,CAAC,KAAK;IACRiB,GAAG,CAACC,KAAK,IAAI,CAAC;IACd,IAAIlB,CAAC,CAACQ,KAAK,KAAK,UAAU,EAAES,GAAG,CAACE,QAAQ,IAAI,CAAC;IAC7C,IAAInB,CAAC,CAACQ,KAAK,KAAK,SAAS,EAAES,GAAG,CAACG,OAAO,IAAI,CAAC;IAC3C,IAAIpB,CAAC,CAACQ,KAAK,KAAK,UAAU,EAAES,GAAG,CAACI,QAAQ,IAAI,CAAC;IAC7C,OAAOJ,GAAG;EACd,CAAC,EACD;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAE,CACrD,CAAC;EAED,MAAMC,SAAS,GAAG,CACd;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAET,OAAO,CAACI;EAAS,CAAC,EAC7C;IAAEI,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAET,OAAO,CAACK;EAAQ,CAAC,EAC3C;IAAEG,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAET,OAAO,CAACM;EAAS,CAAC,CAChD;EAED,MAAMI,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACrD,SAAS,CAACsD,GAAG,CAAC7B,CAAC,IAAIA,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC+B,CAAC,IAAIA,CAAC,CAAC;EACrF,MAAMC,UAAU,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC;EAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;IACvF,MAAMC,IAAI,GAAGpC,QAAQ,CAAC+B,GAAG,CAAC7B,CAAC,IAAI,CAC3BA,CAAC,CAACmC,EAAE,EACJnC,CAAC,CAACoC,SAAS,EACX,IAAIpC,CAAC,CAACE,QAAQ,CAACmC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EACrCrC,CAAC,CAACM,QAAQ,EACVN,CAAC,CAACsC,MAAM,EACRtC,CAAC,CAACQ,KAAK,EACPR,CAAC,CAACuC,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CACrB,CAAC;IACF,MAAMC,UAAU,GAAG,CAACR,OAAO,EAAE,GAAGC,IAAI,CAAC,CAACL,GAAG,CAACa,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;IACtE,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,UAAU,CAAC,EAAE;MAAEK,IAAI,EAAE;IAA0B,CAAC,CAAC;IACxE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;IACZG,CAAC,CAACI,QAAQ,GAAG,eAAe;IAC5BJ,CAAC,CAACK,KAAK,CAAC,CAAC;IACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;EAC5B,CAAC;EAED,oBACI7E,OAAA;IAASuF,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC9BxF,OAAA;MAAIuF,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrErF,OAAO,iBAAIP,OAAA;MAAAwF,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpCnF,KAAK,iBAAIT,OAAA;MAAKuF,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAE/E;IAAK;MAAAgF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACjD,CAACrF,OAAO,IAAI,CAACE,KAAK,IAAIJ,SAAS,CAACqC,MAAM,KAAK,CAAC,iBAAI1C,OAAA;MAAAwF,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5F,CAACrF,OAAO,IAAI,CAACE,KAAK,IAAIJ,SAAS,CAACqC,MAAM,GAAG,CAAC,iBACvC1C,OAAA,CAAAE,SAAA;MAAAsF,QAAA,gBACIxF,OAAA;QAAKuF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BxF,OAAA;UAAKuF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBxF,OAAA;YAAAwF,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd5F,OAAA;YAAAwF,QAAA,EAAI3C,OAAO,CAACG;UAAK;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACN5F,OAAA;UAAKuF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBxF,OAAA;YAAAwF,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB5F,OAAA;YAAAwF,QAAA,EAAI3C,OAAO,CAACI;UAAQ;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACN5F,OAAA;UAAKuF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBxF,OAAA;YAAAwF,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB5F,OAAA;YAAAwF,QAAA,EAAI3C,OAAO,CAACK;UAAO;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACN5F,OAAA;UAAKuF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBxF,OAAA;YAAAwF,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB5F,OAAA;YAAAwF,QAAA,EAAI3C,OAAO,CAACM;UAAQ;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN5F,OAAA;QAAKuF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BxF,OAAA,CAACF,mBAAmB;UAAC+F,KAAK,EAAC,MAAM;UAACC,MAAM,EAAE,GAAI;UAAAN,QAAA,eAC1CxF,OAAA,CAACP,QAAQ;YAACgC,IAAI,EAAE2B,SAAU;YAAAoC,QAAA,gBACtBxF,OAAA,CAACL,KAAK;cAACoG,OAAO,EAAC;YAAM;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxB5F,OAAA,CAACJ,KAAK;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACT5F,OAAA,CAACH,OAAO;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACX5F,OAAA,CAACN,GAAG;cAACqG,OAAO,EAAC,OAAO;cAACC,IAAI,EAAC;YAAS;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACN5F,OAAA;QAAKuF,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpBxF,OAAA;UACI4E,IAAI,EAAC,MAAM;UACXqB,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAEvF,UAAW;UAClBwF,QAAQ,EAAEC,CAAC,IAAI;YAAExF,aAAa,CAACwF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YAAEhF,OAAO,CAAC,CAAC,CAAC;UAAE;QAAE;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACF5F,OAAA;UACIkG,KAAK,EAAErF,cAAe;UACtBsF,QAAQ,EAAEC,CAAC,IAAI;YAAEtF,iBAAiB,CAACsF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YAAEhF,OAAO,CAAC,CAAC,CAAC;UAAE,CAAE;UAAAsE,QAAA,gBAElExF,OAAA;YAAQkG,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvCrC,UAAU,CAACI,GAAG,CAACC,CAAC,iBACb5D,OAAA;YAAgBkG,KAAK,EAAEtC,CAAE;YAAA4B,QAAA,EAAE5B;UAAC,GAAfA,CAAC;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACT5F,OAAA;UACIkG,KAAK,EAAEnF,eAAgB;UACvBoF,QAAQ,EAAEC,CAAC,IAAI;YAAEpF,kBAAkB,CAACoF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YAAEhF,OAAO,CAAC,CAAC,CAAC;UAAE,CAAE;UAAAsE,QAAA,gBAEnExF,OAAA;YAAQkG,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvC/B,UAAU,CAACF,GAAG,CAAC2C,CAAC,iBACbtG,OAAA;YAAgBkG,KAAK,EAAEI,CAAE;YAAAd,QAAA,EAAEc;UAAC,GAAfA,CAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACT5F,OAAA;UAAQuG,OAAO,EAAEzC,SAAU;UAACyB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACN5F,OAAA;QAAKuF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BxF,OAAA;UAAOuF,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BxF,OAAA;YAAAwF,QAAA,eACIxF,OAAA;cAAAwF,QAAA,gBACIxF,OAAA;gBAAAwF,QAAA,EAAI;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACX5F,OAAA;gBAAAwF,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClB5F,OAAA;gBAAAwF,QAAA,EAAI;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtB5F,OAAA;gBAAAwF,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjB5F,OAAA;gBAAAwF,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACf5F,OAAA;gBAAAwF,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxB5F,OAAA;gBAAAwF,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACR5F,OAAA;YAAAwF,QAAA,EACK7C,SAAS,CAACgB,GAAG,CAAC7B,CAAC,iBACZ9B,OAAA;cAAAwF,QAAA,gBACIxF,OAAA;gBAAAwF,QAAA,EAAK1D,CAAC,CAACmC;cAAE;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACf5F,OAAA;gBAAAwF,QAAA,EAAK,IAAIgB,IAAI,CAAC1E,CAAC,CAACoC,SAAS,CAAC,CAACuC,cAAc,CAAC;cAAC;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjD5F,OAAA;gBAAIuF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAE1D,CAAC,CAACE;cAAQ;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpD5F,OAAA;gBAAAwF,QAAA,EAAK1D,CAAC,CAACM,QAAQ,IAAI;cAAG;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5B5F,OAAA;gBAAAwF,QAAA,EACK1D,CAAC,CAACsC,MAAM,IAAI,IAAI,GACXZ,KAAK,CAAC1B,CAAC,CAACsC,MAAM,CAAC,CAAC4B,IAAI,CAAC,GAAG,CAAC,CAACvB,IAAI,CAAC,EAAE,CAAC,GAAGjB,KAAK,CAAC,CAAC,GAAG1B,CAAC,CAACsC,MAAM,CAAC,CAAC4B,IAAI,CAAC,GAAG,CAAC,CAACvB,IAAI,CAAC,EAAE,CAAC,GAC3E;cAAG;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACL5F,OAAA;gBAAIuF,SAAS,EAAE,mBAAmBzD,CAAC,CAACQ,KAAK,CAACL,WAAW,CAAC,CAAC,EAAG;gBAAAuD,QAAA,EACrD1D,CAAC,CAACQ;cAAK;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACL5F,OAAA;gBAAAwF,QAAA,EAAK1D,CAAC,CAACuC,KAAK,CAACC,OAAO,CAAC,CAAC;cAAC;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAbxB9D,CAAC,CAACmC,EAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcT,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACN5F,OAAA;QAAKuF,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBxF,OAAA;UACIuG,OAAO,EAAEA,CAAA,KAAMrF,OAAO,CAACwF,IAAI,IAAIlE,IAAI,CAACmE,GAAG,CAACD,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;UACtDE,QAAQ,EAAE3F,IAAI,KAAK,CAAE;UAAAuE,QAAA,EACxB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5F,OAAA;UAAAwF,QAAA,GAAM,OAAK,EAACvE,IAAI,EAAC,MAAI,EAACsB,UAAU;QAAA;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxC5F,OAAA;UACIuG,OAAO,EAAEA,CAAA,KAAMrF,OAAO,CAACwF,IAAI,IAAIlE,IAAI,CAACqE,GAAG,CAACH,IAAI,GAAG,CAAC,EAAEnE,UAAU,CAAC,CAAE;UAC/DqE,QAAQ,EAAE3F,IAAI,KAAKsB,UAAW;UAAAiD,QAAA,EACjC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB,CAAC;AAACxF,EAAA,CArMID,SAAS;AAAA2G,EAAA,GAAT3G,SAAS;AAuMf,eAAeA,SAAS;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}