{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/components/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/Checklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const checklistItems = [{\n    text: \"Use semantic HTML\",\n    tip: \"Semantic HTML helps search engines and assistive technologies understand your content.\"\n  }, {\n    text: \"Provide alt text for images\",\n    tip: \"Alt text ensures that visually impaired users can access image content.\"\n  }, {\n    text: \"Ensure keyboard navigation\",\n    tip: \"Keyboard navigation is essential for users who cannot use a mouse.\"\n  }, {\n    text: \"Use sufficient color contrast\",\n    tip: \"Good color contrast makes text readable for users with visual impairments.\"\n  }, {\n    text: \"Implement ARIA roles where necessary\",\n    tip: \"ARIA roles provide additional context to assistive technologies.\"\n  }];\n  const handleCheck = item => {\n    const updatedItems = checkedItems.includes(item) ? checkedItems.filter(i => i !== item) : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n  const completionPercentage = Math.round(checkedItems.length / checklistItems.length * 100);\n  const handleShare = () => {\n    const checklistData = JSON.stringify(checkedItems);\n    const shareableLink = `${window.location.origin}/?data=${encodeURIComponent(checklistData)}`;\n    navigator.clipboard.writeText(shareableLink);\n    alert(\"Shareable link copied to clipboard!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"checklist-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accessibility Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${completionPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"completion-text\",\n      children: [completionPercentage, \"% Completed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"checklist\",\n      children: checklistItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: checkedItems.includes(item.text) ? 'checked' : '',\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems.includes(item.text),\n            onChange: () => handleCheck(item.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), item.text, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip\",\n            children: item.tip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShare,\n      className: \"share-button\",\n      children: \"Share Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"gCbgBAbmAEGd9DN9GZKSaFbYY4s=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Checklist","_s","checkedItems","setCheckedItems","saved","localStorage","getItem","JSON","parse","checklistItems","text","tip","handleCheck","item","updatedItems","includes","filter","i","setItem","stringify","completionPercentage","Math","round","length","handleShare","checklistData","shareableLink","window","location","origin","encodeURIComponent","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/components/Checklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/Checklist.css';\n\nconst Checklist = () => {\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const checklistItems = [\n    { text: \"Use semantic HTML\", tip: \"Semantic HTML helps search engines and assistive technologies understand your content.\" },\n    { text: \"Provide alt text for images\", tip: \"Alt text ensures that visually impaired users can access image content.\" },\n    { text: \"Ensure keyboard navigation\", tip: \"Keyboard navigation is essential for users who cannot use a mouse.\" },\n    { text: \"Use sufficient color contrast\", tip: \"Good color contrast makes text readable for users with visual impairments.\" },\n    { text: \"Implement ARIA roles where necessary\", tip: \"ARIA roles provide additional context to assistive technologies.\" },\n  ];\n\n  const handleCheck = (item) => {\n    const updatedItems = checkedItems.includes(item)\n      ? checkedItems.filter(i => i !== item)\n      : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n\n  const completionPercentage = Math.round((checkedItems.length / checklistItems.length) * 100);\n\n  const handleShare = () => {\n    const checklistData = JSON.stringify(checkedItems);\n    const shareableLink = `${window.location.origin}/?data=${encodeURIComponent(checklistData)}`;\n    navigator.clipboard.writeText(shareableLink);\n    alert(\"Shareable link copied to clipboard!\");\n  };\n\n  return (\n    <section className=\"checklist-section\">\n      <h2>Accessibility Checklist</h2>\n      <div className=\"progress-bar\">\n        <div className=\"progress\" style={{ width: `${completionPercentage}%` }} />\n      </div>\n      <p className=\"completion-text\">{completionPercentage}% Completed</p>\n      <ul className=\"checklist\">\n        {checklistItems.map(item => (\n          <li key={item.text} className={checkedItems.includes(item.text) ? 'checked' : ''}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={checkedItems.includes(item.text)}\n                onChange={() => handleCheck(item.text)}\n              />\n              <span className=\"checkmark\"></span>\n              {item.text}\n              <span className=\"tooltip\">{item.tip}</span>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleShare} className=\"share-button\">Share Checklist</button>\n    </section>\n  );\n};\n\nexport default Checklist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}