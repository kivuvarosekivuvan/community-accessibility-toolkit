{"ast":null,"code":"// import React, { useState } from 'react';\n\n// const ColorContrastAnalyzer = () => {\n//   const [foreground, setForeground] = useState('#000000');\n//   const [background, setBackground] = useState('#FFFFFF');\n//   const contrastRatio = calculateContrast(foreground, background);\n\n//   function calculateContrast(fg, bg) {\n//     const fgLuminance = getLuminance(fg);\n//     const bgLuminance = getLuminance(bg);\n//     return (Math.max(fgLuminance, bgLuminance) + 0.05) / (Math.min(fgLuminance, bgLuminance) + 0.05);\n//   }\n\n//   function getLuminance(hex) {\n//     const rgb = parseInt(hex.slice(1), 16);\n//     const r = (rgb >> 16) & 0xff;\n//     const g = (rgb >>  8) & 0xff;\n//     const b = (rgb >>  0) & 0xff;\n//     return (0.2126 * (r / 255) + 0.7152 * (g / 255) + 0.0722 * (b / 255));\n//   }\n\n//   return (\n//     <section>\n//       <h2>Color Contrast Analyzer</h2>\n//       <input\n//         type=\"color\"\n//         value={foreground}\n//         onChange={(e) => setForeground(e.target.value)}\n//       />\n//       <input\n//         type=\"color\"\n//         value={background}\n//         onChange={(e) => setBackground(e.target.value)}\n//       />\n//       <p>Contrast Ratio: {contrastRatio.toFixed(2)}</p>\n//       <p>{contrastRatio >= 4.5 ? 'Good Contrast!' : 'Poor Contrast!'}</p>\n//     </section>\n//   );\n// };\n\n// export default ColorContrastAnalyzer;","map":{"version":3,"names":[],"sources":["/Users/rose/accessibility-toolkit/src/components/ColorContrastAnalyzer.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// const ColorContrastAnalyzer = () => {\n//   const [foreground, setForeground] = useState('#000000');\n//   const [background, setBackground] = useState('#FFFFFF');\n//   const contrastRatio = calculateContrast(foreground, background);\n\n//   function calculateContrast(fg, bg) {\n//     const fgLuminance = getLuminance(fg);\n//     const bgLuminance = getLuminance(bg);\n//     return (Math.max(fgLuminance, bgLuminance) + 0.05) / (Math.min(fgLuminance, bgLuminance) + 0.05);\n//   }\n\n//   function getLuminance(hex) {\n//     const rgb = parseInt(hex.slice(1), 16);\n//     const r = (rgb >> 16) & 0xff;\n//     const g = (rgb >>  8) & 0xff;\n//     const b = (rgb >>  0) & 0xff;\n//     return (0.2126 * (r / 255) + 0.7152 * (g / 255) + 0.0722 * (b / 255));\n//   }\n\n//   return (\n//     <section>\n//       <h2>Color Contrast Analyzer</h2>\n//       <input\n//         type=\"color\"\n//         value={foreground}\n//         onChange={(e) => setForeground(e.target.value)}\n//       />\n//       <input\n//         type=\"color\"\n//         value={background}\n//         onChange={(e) => setBackground(e.target.value)}\n//       />\n//       <p>Contrast Ratio: {contrastRatio.toFixed(2)}</p>\n//       <p>{contrastRatio >= 4.5 ? 'Good Contrast!' : 'Poor Contrast!'}</p>\n//     </section>\n//   );\n// };\n\n// export default ColorContrastAnalyzer;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}