{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/frontend/src/components/UserFeedback.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/UserFeedback.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserFeedback = () => {\n  _s();\n  const [feedback, setFeedback] = useState('');\n  const [rating, setRating] = useState(0);\n  const [category, setCategory] = useState('');\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const handleSubmit = async () => {\n    if (!feedback) {\n      alert(\"Please provide your feedback.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/sentiment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          feedback\n        })\n      });\n      if (!res.ok) {\n        // log status code for debugging\n        console.error(\"Non-OK response from backend:\", res.status);\n        alert(\"Server returned an error.\");\n        return;\n      }\n      const {\n        score,\n        label\n      } = await res.json();\n      alert(`Sentiment: ${label} (score ${score.toFixed(2)})`);\n      // … clear form, etc.\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      alert(\"Failed to connect to the sentiment service.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"feedback-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Suggestion\",\n          children: \"Suggestion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Bug Report\",\n          children: \"Bug Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Compliment\",\n          children: \"Compliment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Rate your experience: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `star ${rating >= star ? 'filled' : ''}`,\n        onClick: () => setRating(star),\n        children: \"\\u2605\"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: feedback,\n      onChange: e => setFeedback(e.target.value),\n      placeholder: \"Share your feedback...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showSuccessPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feedback submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UserFeedback, \"J1ndH4lXkNaNtoOzRBNIuxt0o5E=\");\n_c = UserFeedback;\nexport default UserFeedback;\nvar _c;\n$RefreshReg$(_c, \"UserFeedback\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserFeedback","_s","feedback","setFeedback","rating","setRating","category","setCategory","showSuccessPopup","setShowSuccessPopup","handleSubmit","alert","res","fetch","method","headers","body","JSON","stringify","ok","console","error","status","score","label","json","toFixed","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","star","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/frontend/src/components/UserFeedback.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/UserFeedback.css';\n\n\nconst UserFeedback = () => {\n  const [feedback, setFeedback] = useState('');\n  const [rating, setRating] = useState(0);\n  const [category, setCategory] = useState('');\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n\nconst handleSubmit = async () => {\n  if (!feedback) {\n    alert(\"Please provide your feedback.\");\n    return;\n  }\n\n  try {\n    const res = await fetch(\"http://localhost:5000/api/sentiment\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ feedback }),\n    });\n    if (!res.ok) {\n      // log status code for debugging\n      console.error(\"Non-OK response from backend:\", res.status);\n      alert(\"Server returned an error.\");\n      return;\n    }\n    const { score, label } = await res.json();\n    alert(`Sentiment: ${label} (score ${score.toFixed(2)})`);\n    // … clear form, etc.\n  } catch (err) {\n    console.error(\"Fetch error:\", err);\n    alert(\"Failed to connect to the sentiment service.\");\n  }\n};\n\n\n  return (\n    <section className=\"feedback-section\">\n      <h2>User Feedback</h2>\n      \n      <div>\n        <label>Category:</label>\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\n          <option value=\"\">Select a category</option>\n          <option value=\"Suggestion\">Suggestion</option>\n          <option value=\"Bug Report\">Bug Report</option>\n          <option value=\"Compliment\">Compliment</option>\n        </select>\n      </div>\n      \n      <div className=\"rating\">\n        <span>Rate your experience: </span>\n        {[1, 2, 3, 4, 5].map((star) => (\n          <span\n            key={star}\n            className={`star ${rating >= star ? 'filled' : ''}`}\n            onClick={() => setRating(star)}\n          >\n            ★\n          </span>\n        ))}\n      </div>\n\n      <textarea\n        value={feedback}\n        onChange={(e) => setFeedback(e.target.value)}\n        placeholder=\"Share your feedback...\"\n      ></textarea>\n\n      <button onClick={handleSubmit}>Submit Feedback</button>\n\n      {showSuccessPopup && (\n        <div className=\"success-popup\">\n          <p>Feedback submitted successfully!</p>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default UserFeedback;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}