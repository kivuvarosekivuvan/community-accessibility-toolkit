{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/components/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const checklistItems = [\"Use semantic HTML\", \"Provide alt text for images\", \"Ensure keyboard navigation\", \"Use sufficient color contrast\", \"Implement ARIA roles where necessary\"];\n  const handleCheck = item => {\n    const updatedItems = checkedItems.includes(item) ? checkedItems.filter(i => i !== item) : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accessibility Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: checklistItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems.includes(item),\n            onChange: () => handleCheck(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"gCbgBAbmAEGd9DN9GZKSaFbYY4s=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Checklist","_s","checkedItems","setCheckedItems","saved","localStorage","getItem","JSON","parse","checklistItems","handleCheck","item","updatedItems","includes","filter","i","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/components/Checklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Checklist = () => {\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const checklistItems = [\n    \"Use semantic HTML\",\n    \"Provide alt text for images\",\n    \"Ensure keyboard navigation\",\n    \"Use sufficient color contrast\",\n    \"Implement ARIA roles where necessary\",\n  ];\n\n  const handleCheck = (item) => {\n    const updatedItems = checkedItems.includes(item)\n      ? checkedItems.filter(i => i !== item)\n      : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n  }, [checkedItems]);\n\n  return (\n    <section>\n      <h2>Accessibility Checklist</h2>\n      <ul>\n        {checklistItems.map(item => (\n          <li key={item}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={checkedItems.includes(item)}\n                onChange={() => handleCheck(item)}\n              />\n              {item}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Checklist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,MAAM;IACrD,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EAEF,MAAMK,cAAc,GAAG,CACrB,mBAAmB,EACnB,6BAA6B,EAC7B,4BAA4B,EAC5B,+BAA+B,EAC/B,sCAAsC,CACvC;EAED,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5B,MAAMC,YAAY,GAAGV,YAAY,CAACW,QAAQ,CAACF,IAAI,CAAC,GAC5CT,YAAY,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,IAAI,CAAC,GACpC,CAAC,GAAGT,YAAY,EAAES,IAAI,CAAC;IAC3BR,eAAe,CAACS,YAAY,CAAC;EAC/B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdS,YAAY,CAACW,OAAO,CAAC,cAAc,EAAET,IAAI,CAACU,SAAS,CAACf,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvB,OAAA;MAAAmB,QAAA,EACGT,cAAc,CAACc,GAAG,CAACZ,IAAI,iBACtBZ,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YACEyB,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEvB,YAAY,CAACW,QAAQ,CAACF,IAAI,CAAE;YACrCe,QAAQ,EAAEA,CAAA,KAAMhB,WAAW,CAACC,IAAI;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,EACDX,IAAI;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC,GARDX,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAST,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAACrB,EAAA,CA5CID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}