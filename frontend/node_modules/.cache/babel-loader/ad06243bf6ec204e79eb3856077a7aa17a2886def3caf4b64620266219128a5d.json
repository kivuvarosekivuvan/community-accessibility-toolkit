{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/components/ColorContrastAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorContrastAnalyzer = () => {\n  _s();\n  const [foreground, setForeground] = useState('#000000');\n  const [background, setBackground] = useState('#FFFFFF');\n  const contrastRatio = calculateContrast(foreground, background);\n  function calculateContrast(fg, bg) {\n    const fgLuminance = getLuminance(fg);\n    const bgLuminance = getLuminance(bg);\n    return (Math.max(fgLuminance, bgLuminance) + 0.05) / (Math.min(fgLuminance, bgLuminance) + 0.05);\n  }\n  function getLuminance(hex) {\n    const rgb = parseInt(hex.slice(1), 16);\n    const r = rgb >> 16 & 0xff;\n    const g = rgb >> 8 & 0xff;\n    const b = rgb >> 0 & 0xff;\n    return 0.2126 * (r / 255) + 0.7152 * (g / 255) + 0.0722 * (b / 255);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Color Contrast Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      value: foreground,\n      onChange: e => setForeground(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      value: background,\n      onChange: e => setBackground(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contrast Ratio: \", contrastRatio.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: contrastRatio >= 4.5 ? 'Good Contrast!' : 'Poor Contrast!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorContrastAnalyzer, \"Cj0X8T5OBN9WfpNGuY3WVbH42h0=\");\n_c = ColorContrastAnalyzer;\nexport default ColorContrastAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"ColorContrastAnalyzer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ColorContrastAnalyzer","_s","foreground","setForeground","background","setBackground","contrastRatio","calculateContrast","fg","bg","fgLuminance","getLuminance","bgLuminance","Math","max","min","hex","rgb","parseInt","slice","r","g","b","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toFixed","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/components/ColorContrastAnalyzer.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst ColorContrastAnalyzer = () => {\n  const [foreground, setForeground] = useState('#000000');\n  const [background, setBackground] = useState('#FFFFFF');\n  const contrastRatio = calculateContrast(foreground, background);\n\n  function calculateContrast(fg, bg) {\n    const fgLuminance = getLuminance(fg);\n    const bgLuminance = getLuminance(bg);\n    return (Math.max(fgLuminance, bgLuminance) + 0.05) / (Math.min(fgLuminance, bgLuminance) + 0.05);\n  }\n\n  function getLuminance(hex) {\n    const rgb = parseInt(hex.slice(1), 16);\n    const r = (rgb >> 16) & 0xff;\n    const g = (rgb >> 8) & 0xff;\n    const b = (rgb >> 0) & 0xff;\n    return (0.2126 * (r / 255) + 0.7152 * (g / 255) + 0.0722 * (b / 255));\n  }\n\n  return (\n    <section>\n      <h2>Color Contrast Analyzer</h2>\n      <input\n        type=\"color\"\n        value={foreground}\n        onChange={(e) => setForeground(e.target.value)}\n      />\n      <input\n        type=\"color\"\n        value={background}\n        onChange={(e) => setBackground(e.target.value)}\n      />\n      <p>Contrast Ratio: {contrastRatio.toFixed(2)}</p>\n      <p>{contrastRatio >= 4.5 ? 'Good Contrast!' : 'Poor Contrast!'}</p>\n    </section>\n  );\n};\n\nexport default ColorContrastAnalyzer;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAMS,aAAa,GAAGC,iBAAiB,CAACL,UAAU,EAAEE,UAAU,CAAC;EAE/D,SAASG,iBAAiBA,CAACC,EAAE,EAAEC,EAAE,EAAE;IACjC,MAAMC,WAAW,GAAGC,YAAY,CAACH,EAAE,CAAC;IACpC,MAAMI,WAAW,GAAGD,YAAY,CAACF,EAAE,CAAC;IACpC,OAAO,CAACI,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEE,WAAW,CAAC,GAAG,IAAI,KAAKC,IAAI,CAACE,GAAG,CAACL,WAAW,EAAEE,WAAW,CAAC,GAAG,IAAI,CAAC;EAClG;EAEA,SAASD,YAAYA,CAACK,GAAG,EAAE;IACzB,MAAMC,GAAG,GAAGC,QAAQ,CAACF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACtC,MAAMC,CAAC,GAAIH,GAAG,IAAI,EAAE,GAAI,IAAI;IAC5B,MAAMI,CAAC,GAAIJ,GAAG,IAAI,CAAC,GAAI,IAAI;IAC3B,MAAMK,CAAC,GAAIL,GAAG,IAAI,CAAC,GAAI,IAAI;IAC3B,OAAQ,MAAM,IAAIG,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,IAAIC,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,IAAIC,CAAC,GAAG,GAAG,CAAC;EACtE;EAEA,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC5B,OAAA;MACE6B,IAAI,EAAC,OAAO;MACZC,KAAK,EAAE3B,UAAW;MAClB4B,QAAQ,EAAGC,CAAC,IAAK5B,aAAa,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MACE6B,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEzB,UAAW;MAClB0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MAAAwB,QAAA,GAAG,kBAAgB,EAACjB,aAAa,CAAC2B,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD5B,OAAA;MAAAwB,QAAA,EAAIjB,aAAa,IAAI,GAAG,GAAG,gBAAgB,GAAG;IAAgB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAAC1B,EAAA,CApCID,qBAAqB;AAAAkC,EAAA,GAArBlC,qBAAqB;AAsC3B,eAAeA,qBAAqB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}