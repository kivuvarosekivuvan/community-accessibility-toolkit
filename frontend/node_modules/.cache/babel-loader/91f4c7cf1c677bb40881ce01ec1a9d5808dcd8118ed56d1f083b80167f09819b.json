{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/TextToSpeech.js\",\n  _s = $RefreshSig$();\n// src/components/TextToSpeech.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeech = ({\n  text\n}) => {\n  _s();\n  const [speech, setSpeech] = useState(null);\n\n  // Initialize speech synthesis\n  const initializeSpeech = () => {\n    const speechInstance = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onend = () => {\n      setSpeech(null);\n    };\n    setSpeech(utterance);\n    speechInstance.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: initializeSpeech,\n      disabled: !text,\n      children: \"Read Aloud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"JEATnLtFHkm/gvOZ0yIOo9Imzqc=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextToSpeech","text","_s","speech","setSpeech","initializeSpeech","speechInstance","window","speechSynthesis","utterance","SpeechSynthesisUtterance","onend","speak","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/TextToSpeech.js"],"sourcesContent":["// src/components/TextToSpeech.js\n\nimport React, { useState } from 'react';\n\nconst TextToSpeech = ({ text }) => {\n  const [speech, setSpeech] = useState(null);\n\n  // Initialize speech synthesis\n  const initializeSpeech = () => {\n    const speechInstance = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onend = () => {\n      setSpeech(null);\n    };\n    setSpeech(utterance);\n    speechInstance.speak(utterance);\n  };\n\n  return (\n    <div>\n      <button onClick={initializeSpeech} disabled={!text}>\n        Read Aloud\n      </button>\n    </div>\n  );\n};\n\nexport default TextToSpeech;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,cAAc,GAAGC,MAAM,CAACC,eAAe;IAC7C,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACT,IAAI,CAAC;IACpDQ,SAAS,CAACE,KAAK,GAAG,MAAM;MACtBP,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC;IACDA,SAAS,CAACK,SAAS,CAAC;IACpBH,cAAc,CAACM,KAAK,CAACH,SAAS,CAAC;EACjC,CAAC;EAED,oBACEV,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAQe,OAAO,EAAET,gBAAiB;MAACU,QAAQ,EAAE,CAACd,IAAK;MAAAY,QAAA,EAAC;IAEpD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CArBIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}