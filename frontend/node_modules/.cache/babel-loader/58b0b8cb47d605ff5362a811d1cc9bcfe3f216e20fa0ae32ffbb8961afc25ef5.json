{"ast":null,"code":"// // frontend/src/components/AdminPage.js\n\n// import React, { useState, useEffect } from 'react';\n// import './styles/AdminPage.css';\n\n// const AdminPage = () => {\n//     const [feedbacks, setFeedbacks] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Fetch all feedbacks on component mount\n//     useEffect(() => {\n//         const fetchFeedbacks = async () => {\n//             try {\n//                 const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n//                 if (!res.ok) {\n//                     setError(`Server returned ${res.status}`);\n//                     setLoading(false);\n//                     return;\n//                 }\n//                 const data = await res.json();\n//                 setFeedbacks(data);\n//             } catch (err) {\n//                 console.error('Fetch error:', err);\n//                 setError('Could not fetch feedbacks.');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchFeedbacks();\n//     }, []);\n\n//     return (\n//         <section className=\"admin-section\">\n//             <h2 className=\"admin-header\">Admin Page: All Feedback Submissions</h2>\n\n//             {loading && <p>Loading feedbacks…</p>}\n//             {error && <div className=\"error-box\">{error}</div>}\n\n//             {!loading && !error && feedbacks.length === 0 && (\n//                 <p>No feedbacks have been submitted yet.</p>\n//             )}\n\n//             {!loading && !error && feedbacks.length > 0 && (\n//                 <div className=\"table-container\">\n//                     <table className=\"feedback-table\">\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>Timestamp (UTC)</th>\n//                                 <th>Feedback Text</th>\n//                                 <th>Category</th>\n//                                 <th>Rating</th>\n//                                 <th>Sentiment Label</th>\n//                                 <th>Sentiment Score</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {feedbacks.map((f) => (\n//                                 <tr key={f.id}>\n//                                     <td>{f.id}</td>\n//                                     <td>{new Date(f.timestamp).toLocaleString()}</td>\n//                                     <td className=\"feedback-text-cell\">{f.feedback}</td>\n//                                     <td>{f.category || '—'}</td>\n//                                     <td>\n//                                         {f.rating != null\n//                                             ? Array(f.rating).fill('★').join('') +\n//                                             Array(5 - f.rating).fill('☆').join('')\n//                                             : '—'}\n//                                     </td>\n//                                     <td className={`sentiment-label ${f.label.toLowerCase()}`}>\n//                                         {f.label}\n//                                     </td>\n//                                     <td>{f.score.toFixed(2)}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </section>\n//     );\n// };\n\n// export default AdminPage;","map":{"version":3,"names":[],"sources":["/Users/rose/accessibility-toolkit/frontend/src/components/adminPage.js"],"sourcesContent":["// // frontend/src/components/AdminPage.js\n\n// import React, { useState, useEffect } from 'react';\n// import './styles/AdminPage.css';\n\n// const AdminPage = () => {\n//     const [feedbacks, setFeedbacks] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Fetch all feedbacks on component mount\n//     useEffect(() => {\n//         const fetchFeedbacks = async () => {\n//             try {\n//                 const res = await fetch('http://127.0.0.1:5000/api/feedbacks');\n//                 if (!res.ok) {\n//                     setError(`Server returned ${res.status}`);\n//                     setLoading(false);\n//                     return;\n//                 }\n//                 const data = await res.json();\n//                 setFeedbacks(data);\n//             } catch (err) {\n//                 console.error('Fetch error:', err);\n//                 setError('Could not fetch feedbacks.');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchFeedbacks();\n//     }, []);\n\n//     return (\n//         <section className=\"admin-section\">\n//             <h2 className=\"admin-header\">Admin Page: All Feedback Submissions</h2>\n\n//             {loading && <p>Loading feedbacks…</p>}\n//             {error && <div className=\"error-box\">{error}</div>}\n\n//             {!loading && !error && feedbacks.length === 0 && (\n//                 <p>No feedbacks have been submitted yet.</p>\n//             )}\n\n//             {!loading && !error && feedbacks.length > 0 && (\n//                 <div className=\"table-container\">\n//                     <table className=\"feedback-table\">\n//                         <thead>\n//                             <tr>\n//                                 <th>ID</th>\n//                                 <th>Timestamp (UTC)</th>\n//                                 <th>Feedback Text</th>\n//                                 <th>Category</th>\n//                                 <th>Rating</th>\n//                                 <th>Sentiment Label</th>\n//                                 <th>Sentiment Score</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {feedbacks.map((f) => (\n//                                 <tr key={f.id}>\n//                                     <td>{f.id}</td>\n//                                     <td>{new Date(f.timestamp).toLocaleString()}</td>\n//                                     <td className=\"feedback-text-cell\">{f.feedback}</td>\n//                                     <td>{f.category || '—'}</td>\n//                                     <td>\n//                                         {f.rating != null\n//                                             ? Array(f.rating).fill('★').join('') +\n//                                             Array(5 - f.rating).fill('☆').join('')\n//                                             : '—'}\n//                                     </td>\n//                                     <td className={`sentiment-label ${f.label.toLowerCase()}`}>\n//                                         {f.label}\n//                                     </td>\n//                                     <td>{f.score.toFixed(2)}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </section>\n//     );\n// };\n\n// export default AdminPage;\n\n\n\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}