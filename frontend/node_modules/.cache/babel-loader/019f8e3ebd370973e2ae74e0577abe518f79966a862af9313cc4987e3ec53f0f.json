{"ast":null,"code":"var _jsxFileName = \"/Users/rose/accessibility-toolkit/src/components/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/Checklist.css';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [progressHistory, setProgressHistory] = useState(() => {\n    const savedHistory = localStorage.getItem('progressHistory');\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n  const [reminder, setReminder] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const checklistItems = [{\n    text: \"Use semantic HTML\",\n    tip: \"Semantic HTML helps search engines and assistive technologies understand your content.\"\n  }, {\n    text: \"Provide alt text for images\",\n    tip: \"Alt text ensures that visually impaired users can access image content.\"\n  }, {\n    text: \"Ensure keyboard navigation\",\n    tip: \"Keyboard navigation is essential for users who cannot use a mouse.\"\n  }, {\n    text: \"Use sufficient color contrast\",\n    tip: \"Good color contrast makes text readable for users with visual impairments.\"\n  }, {\n    text: \"Implement ARIA roles where necessary\",\n    tip: \"ARIA roles provide additional context to assistive technologies.\"\n  }];\n  const handleCheck = item => {\n    const updatedItems = checkedItems.includes(item) ? checkedItems.filter(i => i !== item) : [...checkedItems, item];\n    setCheckedItems(updatedItems);\n\n    // Update progress history\n    setProgressHistory(prevHistory => [...prevHistory, {\n      date: new Date().toLocaleString(),\n      items: updatedItems\n    }]);\n  };\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n    localStorage.setItem('progressHistory', JSON.stringify(progressHistory));\n  }, [checkedItems, progressHistory]);\n  const completionPercentage = Math.round(checkedItems.length / checklistItems.length * 100);\n  const handleShare = () => {\n    const checklistData = JSON.stringify(checkedItems);\n    const shareableLink = `${window.location.origin}/?data=${encodeURIComponent(checklistData)}`;\n    navigator.clipboard.writeText(shareableLink);\n    alert(\"Shareable link copied to clipboard!\");\n  };\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Accessibility Checklist\", 20, 20);\n    checklistItems.forEach((item, index) => {\n      const status = checkedItems.includes(item.text) ? \"✔️\" : \"❌\";\n      doc.text(`${status} ${item.text}`, 20, 30 + index * 10);\n    });\n    doc.save(\"checklist.pdf\");\n  };\n  const handleSetReminder = () => {\n    if (!deadline) {\n      alert(\"Please set a valid deadline.\");\n      return;\n    }\n    alert(`Reminder set for: ${reminder} on ${deadline}`);\n    setReminder('');\n    setDeadline('');\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const deadlineDate = new Date(deadline);\n      if (deadlineDate && deadlineDate <= now) {\n        alert(\"Reminder: You have unchecked items to complete!\");\n        setDeadline(''); // Clear the deadline after reminder\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, [deadline]);\n  const clearProgressHistory = () => {\n    setProgressHistory([]);\n    localStorage.removeItem('progressHistory');\n    alert(\"Progress history cleared.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"checklist-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accessibility Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${completionPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"completion-text\",\n      children: [completionPercentage, \"% Completed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"checklist\",\n      children: checklistItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: checkedItems.includes(item.text) ? 'checked' : '',\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems.includes(item.text),\n            onChange: () => handleCheck(item.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), item.text, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip\",\n            children: item.tip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShare,\n      className: \"share-button\",\n      children: \"Share Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportPDF,\n      className: \"export-button\",\n      children: \"Export to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: reminder,\n        onChange: e => setReminder(e.target.value),\n        placeholder: \"Set a reminder message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: deadline,\n        onChange: e => setDeadline(e.target.value),\n        placeholder: \"Set a deadline...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetReminder,\n        className: \"set-reminder-button\",\n        children: \"Set Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Progress History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: progressHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [entry.date, \": \", entry.items.join(', ')]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearProgressHistory,\n        className: \"clear-history-button\",\n        children: \"Clear History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"rJuOlSvtwqKwFNK8ZANR0jBdcD0=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Checklist","_s","checkedItems","setCheckedItems","saved","localStorage","getItem","JSON","parse","progressHistory","setProgressHistory","savedHistory","reminder","setReminder","deadline","setDeadline","checklistItems","text","tip","handleCheck","item","updatedItems","includes","filter","i","prevHistory","date","Date","toLocaleString","items","setItem","stringify","completionPercentage","Math","round","length","handleShare","checklistData","shareableLink","window","location","origin","encodeURIComponent","navigator","clipboard","writeText","alert","handleExportPDF","doc","forEach","index","status","save","handleSetReminder","interval","setInterval","now","deadlineDate","clearInterval","clearProgressHistory","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","type","checked","onChange","onClick","value","e","target","placeholder","entry","join","_c","$RefreshReg$"],"sources":["/Users/rose/accessibility-toolkit/src/components/Checklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles/Checklist.css';\nimport jsPDF from 'jspdf';\n\nconst Checklist = () => {\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const saved = localStorage.getItem('checkedItems');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const [progressHistory, setProgressHistory] = useState(() => {\n    const savedHistory = localStorage.getItem('progressHistory');\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  const [reminder, setReminder] = useState('');\n  const [deadline, setDeadline] = useState('');\n  \n  const checklistItems = [\n    { text: \"Use semantic HTML\", tip: \"Semantic HTML helps search engines and assistive technologies understand your content.\" },\n    { text: \"Provide alt text for images\", tip: \"Alt text ensures that visually impaired users can access image content.\" },\n    { text: \"Ensure keyboard navigation\", tip: \"Keyboard navigation is essential for users who cannot use a mouse.\" },\n    { text: \"Use sufficient color contrast\", tip: \"Good color contrast makes text readable for users with visual impairments.\" },\n    { text: \"Implement ARIA roles where necessary\", tip: \"ARIA roles provide additional context to assistive technologies.\" },\n  ];\n\n  const handleCheck = (item) => {\n    const updatedItems = checkedItems.includes(item)\n      ? checkedItems.filter(i => i !== item)\n      : [...checkedItems, item];\n\n    setCheckedItems(updatedItems);\n\n    // Update progress history\n    setProgressHistory(prevHistory => [\n      ...prevHistory,\n      { date: new Date().toLocaleString(), items: updatedItems }\n    ]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('checkedItems', JSON.stringify(checkedItems));\n    localStorage.setItem('progressHistory', JSON.stringify(progressHistory));\n  }, [checkedItems, progressHistory]);\n\n  const completionPercentage = Math.round((checkedItems.length / checklistItems.length) * 100);\n\n  const handleShare = () => {\n    const checklistData = JSON.stringify(checkedItems);\n    const shareableLink = `${window.location.origin}/?data=${encodeURIComponent(checklistData)}`;\n    navigator.clipboard.writeText(shareableLink);\n    alert(\"Shareable link copied to clipboard!\");\n  };\n\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Accessibility Checklist\", 20, 20);\n    checklistItems.forEach((item, index) => {\n      const status = checkedItems.includes(item.text) ? \"✔️\" : \"❌\";\n      doc.text(`${status} ${item.text}`, 20, 30 + (index * 10));\n    });\n    doc.save(\"checklist.pdf\");\n  };\n\n  const handleSetReminder = () => {\n    if (!deadline) {\n      alert(\"Please set a valid deadline.\");\n      return;\n    }\n    alert(`Reminder set for: ${reminder} on ${deadline}`);\n    setReminder('');\n    setDeadline('');\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const deadlineDate = new Date(deadline);\n      if (deadlineDate && deadlineDate <= now) {\n        alert(\"Reminder: You have unchecked items to complete!\");\n        setDeadline(''); // Clear the deadline after reminder\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, [deadline]);\n\n  const clearProgressHistory = () => {\n    setProgressHistory([]);\n    localStorage.removeItem('progressHistory');\n    alert(\"Progress history cleared.\");\n  };\n\n  return (\n    <section className=\"checklist-section\">\n      <h2>Accessibility Checklist</h2>\n      <div className=\"progress-bar\">\n        <div className=\"progress\" style={{ width: `${completionPercentage}%` }} />\n      </div>\n      <p className=\"completion-text\">{completionPercentage}% Completed</p>\n      <ul className=\"checklist\">\n        {checklistItems.map(item => (\n          <li key={item.text} className={checkedItems.includes(item.text) ? 'checked' : ''}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={checkedItems.includes(item.text)}\n                onChange={() => handleCheck(item.text)}\n              />\n              <span className=\"checkmark\"></span>\n              {item.text}\n              <span className=\"tooltip\">{item.tip}</span>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleShare} className=\"share-button\">Share Checklist</button>\n      <button onClick={handleExportPDF} className=\"export-button\">Export to PDF</button>\n      <div className=\"reminder-section\">\n        <input\n          type=\"text\"\n          value={reminder}\n          onChange={(e) => setReminder(e.target.value)}\n          placeholder=\"Set a reminder message...\"\n        />\n        <input\n          type=\"datetime-local\"\n          value={deadline}\n          onChange={(e) => setDeadline(e.target.value)}\n          placeholder=\"Set a deadline...\"\n        />\n        <button onClick={handleSetReminder} className=\"set-reminder-button\">Set Reminder</button>\n      </div>\n      <div className=\"history-section\">\n        <h3>Progress History</h3>\n        <ul>\n          {progressHistory.map((entry, index) => (\n            <li key={index}>{entry.date}: {entry.items.join(', ')}</li>\n          ))}\n        </ul>\n        <button onClick={clearProgressHistory} className=\"clear-history-button\">Clear History</button>\n      </div>\n    </section>\n  );\n};\n\nexport default Checklist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}